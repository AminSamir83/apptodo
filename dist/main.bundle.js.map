{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/home/dialog-overview-example-dialog.html","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/material.module.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/todo/todo.component.css","./src/app/todo/todo.component.html","./src/app/todo/todo.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { JwtHelper } from 'angular2-jwt';\n\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private http: Http) { }\n\n  login(user) {\n    return this.http.post('http://localhost:3000/auth/login', user);\n   }\n\n\n  addUser(userr) {\n    // console.log(userr);\n    return (this.http.post('http://localhost:3000/auth/register', userr));\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n  }\n  saveToken(t) {\n    localStorage.setItem('token', t);\n  }\n\n  checkToken() {\n    if (localStorage.getItem('token')) {\n      const token = localStorage.getItem('token');\n      const jwtHelper: JwtHelper = new JwtHelper();\n      //  console.log(jwtHelper.decodeToken(token));\n\n      // return true;\n      return !jwtHelper.isTokenExpired(token);\n    } else { return false; }\n  }\n\n  getTodosById() {\n    return (this.http.get('http://localhost:3000/api/todos/' + this.getUserId()));\n  }\n  getTodoByIndex(index) {\n    return (this.http.get('http://localhost:3000/api/todos/' + this.getUserId() + '/' + index));\n  }\n  updateTodo(todo, index) {\n    return (this.http.put('http://localhost:3000/api/todos/' + this.getUserId() + '/' + index, todo));\n  }\n\n\n  addTodo(todo) {\n    // console.log(userr);\n    return (this.http.post('http://localhost:3000/api/todos/' + this.getUserId(), todo));\n  }\n  getUserId() {\n    if (localStorage.getItem('token')) {\n      const token = localStorage.getItem('token');\n      const jwtHelper: JwtHelper = new JwtHelper();\n      return jwtHelper.decodeToken(token)._id;\n    }\n\n\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/api.service.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { TodoComponent } from './todo/todo.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component : LoginComponent\n  },\n  {\n    path: 'register',\n    component : RegisterComponent\n  },\n  {\n    path: 'todo/:index',\n    component : TodoComponent\n  },\n  {\n    path: '',\n    component : HomeComponent,\n    canActivate : [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent, DialogOverviewExampleDialogComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { HttpModule } from '@angular/http';\nimport { AuthGuard } from './auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RegisterComponent,\n    TodoComponent,\n    LoginComponent,\n    DialogOverviewExampleDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [ApiService, AuthGuard],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { ApiService } from './api.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private apiService: ApiService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n\n   // if (!localStorage.getItem('token')) {\n     if (!this.apiService.checkToken()) {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.guard.ts","module.exports = \"<h1 mat-dialog-title>Add Todo</h1>\\r\\n<div mat-dialog-content>\\r\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"homeForm\\\" (ngSubmit)=\\\"getFormValue(homeForm)\\\">\\r\\n    <mat-card-content>\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" type=\\\"text\\\" [(ngModel)]=\\\"todo.title\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" type=\\\"text\\\" [(ngModel)]=\\\"todo.description\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!--\\r\\n              <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Date\\\" formControlName=\\\"date\\\" type=\\\"text\\\" [(ngModel)]=\\\"todo.date\\\">\\r\\n            </mat-form-field>\\r\\n          -->\\r\\n            <!--\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Done\\\" formControlName=\\\"done\\\" type=\\\"text\\\" [(ngModel)]=\\\"todo.done\\\">\\r\\n            </mat-form-field>\\r\\n            -->\\r\\n\\r\\n\\r\\n              <mat-radio-group formControlName=\\\"done\\\" [(ngModel)]=\\\"todo.done\\\">\\r\\n                  <mat-radio-button [value]=\\\"true\\\">true</mat-radio-button>\\r\\n                  <mat-radio-button [value]=\\\"false\\\">false</mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n              <!--\\r\\n                <div>\\r\\n                <mat-checkbox formControlName=\\\"done\\\"  [(ngModel)]=\\\"todo.done\\\" [value]=\\\"true\\\" >true</mat-checkbox>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-checkbox formControlName=\\\"done\\\"  [(ngModel)]=\\\"todo.done\\\" [value]=\\\"false\\\" >false</mat-checkbox>\\r\\n              </div>\\r\\n            -->\\r\\n            <div mat-dialog-actions>\\r\\n                <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n                <button mat-button (click)=\\\"getFormValue(homeForm)\\\" [mat-dialog-close]=\\\"todo\\\" cdkFocusInitial>Add</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n <!-- <mat-form-field>\\r\\n\\r\\n\\r\\n    <input matInput [(ngModel)]=\\\"data.animal\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/dialog-overview-example-dialog.html\n// module id = ./src/app/home/dialog-overview-example-dialog.html\n// module chunks = main","module.exports = \"\\r\\n.container-card{\\r\\n  display: table-cell;\\r\\n  vertical-align: middle;\\r\\npadding-left: 170px;\\r\\n  margin: auto;\\r\\n  width: 1000px;\\r\\n}\\r\\n.example-card {\\r\\n  width: 700px;\\r\\n padding: 50px;\\r\\n  margin: auto;\\r\\n}\\r\\n.title{\\r\\n  color:deeppink;\\r\\n  text-align: center;\\r\\n  width: 100%;\\r\\n}\\r\\n.btn_log{\\r\\n  text-align:end;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div align=\\\"left\\\">  <button mat-button type=\\\"submit\\\" (click)=\\\"Logout()\\\">Logout</button></div>\\n<div class=\\\"title\\\">\\n  <button  (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">add_circle</i></button>\\n</div>\\n<div *ngFor= \\\"let todo of todos; index as i;\\\">\\n  <a routerLink='/todo/{{i}}'> Title : {{ todo.title}}</a>\\n  <p> Description : {{ todo.description}}</p>\\n  <p> Done : {{ todo.done}}</p>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // todos = [];\n  todos = { title: '', description: '', date: new Date(), done: '' };\n\n\n  constructor(private apiService: ApiService, private router: Router, public dialog: MatDialog) { }\n\n  getTodos() {\n    this.apiService.getTodosById().subscribe( res => {\n      this.todos = res.json().data;\n      console.log(this.todos);\n    }\n    );\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '300px',\n      data: { name: 'this.name', animal: 'this.animal' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.router.navigateByUrl('/');\n      this.ngOnInit();\n      // this.animal = result;\n    });\n  }\n\n  Logout() {\n    this.apiService.logout();\n    this.router.navigateByUrl('/login');\n    }\n\n  ngOnInit() {\n    this.getTodos();\n\n  }\n\n}\n\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialogComponent {\n  todo = { title: '', description: '', date: '', done: '' };\n  homeForm = new FormGroup ({\n    title: new FormControl('', Validators.required),\n    description: new FormControl ('', Validators.required),\n    date: new FormControl ('', Validators.required),\n    done: new FormControl ('', Validators.required)\n  });\n\n\n  constructor( private router: Router, private apiService: ApiService,\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    getFormValue(f) {\n      console.log(f.value);\n      // console.log(f.valid);\n      const todos1 = {title : f.value.title , description : f.value.description, date: new Date(), done: f.value.done}\n      this.apiService.addTodo(todos1).subscribe(res => {\n        // console.log(res.json().data);\n        if (res.json().status === 401) {\n         // this.router.navigateByUrl('/login');\n          console.log(res.json().message);\n        } else {\n            // let token = res.json().data;\n            // this.apiService.saveToken(token);\n            // this.router.navigateByUrl('/login');\n            // this.router.navigateByUrl('/');\n            console.log(res);\n\n           }\n      });\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".body{\\r\\n  background-color: grey;\\r\\nposition: absolute;\\r\\ndisplay: table;\\r\\nwidth: 100%;\\r\\nheight: 100%;\\r\\n}\\r\\n.example-card {\\r\\n  max-width: 400px;\\r\\n padding: 50px;\\r\\n  margin: auto;\\r\\n}\\r\\n.container-card{\\r\\n  display: table-cell;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.btn_pt{\\r\\n  text-align: center;\\r\\n}\\r\\n.btn_rg{\\r\\n  text-align: center;\\r\\n  color: darkblue;\\r\\n}\\r\\n.title{\\r\\n  color: darkblue;\\r\\n  text-align: center;\\r\\n  width: 100%;\\r\\n}\\r\\n.body{\\r\\n\\r\\n  width: 100%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"body\\\">\\n  <div class=\\\"container-card\\\">\\n    <mat-card class=\\\"example-card\\\">\\n      <div class =\\\"title\\\">\\n\\n\\n          <h1> Sign In </h1>\\n    </div>\\n\\n    <form class=\\\"example-form\\\" [formGroup]= \\\"loginForm\\\" (ngSubmit)=\\\"submit(loginForm)\\\">\\n      <mat-card-content>\\n\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input  type =\\\"email\\\" name=\\\"email\\\" matInput placeholder=\\\"Enter your email\\\"  formControlName = \\\"email\\\">\\n\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input  type =\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Enter your password\\\"  formControlName = \\\"password\\\">\\n\\n          </mat-form-field>\\n          <div class=\\\"btn_rg\\\">\\n          <button mat-raised-button color=\\\"primary\\\"  type =\\\"submit\\\"  >Login</button>\\n          </div>\\n\\n      </mat-card-content>\\n    </form>\\n      <mat-card-actions class =\\\"btn_pt\\\">\\n        <a  routerLink=\\\"/register\\\"> Register ? </a>\\n\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email = '';\n  password = '';\n  loginForm = new FormGroup ({\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(5)])\n  });\n\n  constructor(private apiService: ApiService , private router: Router) { }\n\n  submit(f) {\n\n    console.log(f.value);\n    if (f.valid) {\n     this.apiService.login(f.value).subscribe(res => {\n       console.log(res.json().data);\n       const token = res.json().data.token ;\n       this.apiService.saveToken(token);\n       this.router.navigateByUrl('');\n   });\n }}\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule,\r\n  } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule],\r\n  exports: [MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule],\r\n})\r\nexport class MaterialModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/material.module.ts","module.exports = \"\\r\\n.container-card {\\r\\n  margin: 100px;\\r\\n\\r\\n\\r\\n}\\r\\n.example-card {\\r\\n  max-width: 400px;\\r\\n  margin: auto;\\r\\n  padding: 50px;\\r\\n\\r\\n\\r\\n}\\r\\n.example-header-image {\\r\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n.example-container {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n}\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n.centerClass {\\r\\ndisplay:-webkit-box;\\r\\ndisplay:-ms-flexbox;\\r\\ndisplay:flex;\\r\\n-webkit-box-align: center;\\r\\n    -ms-flex-align: center;\\r\\n        align-items: center;\\r\\n-webkit-box-pack: center;\\r\\n    -ms-flex-pack: center;\\r\\n        justify-content: center;\\r\\n\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-card\\\">\\n<mat-card class=\\\"example-card\\\">\\n\\n  <mat-card-header  class=\\\"centerClass\\\">\\n    <div > Register</div>\\n  </mat-card-header>\\n<form class=\\\"example-form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"getFormValue(registerForm)\\\">\\n  <mat-card-content>\\n      <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\n            <mat-error *ngIf=\\\"registerForm.controls['name'].invalid\\\"> {{getErrorMessage(registerForm.controls['name'])}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastname\\\" type=\\\"text\\\">\\n            <mat-error *ngIf=\\\"registerForm.controls['lastname'].invalid\\\"> {{getErrorMessage(registerForm.controls['lastname'])}}</mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\" type=\\\"email\\\">\\n              <mat-error *ngIf=\\\"registerForm.controls['email'].invalid\\\"> {{getErrorMessage(registerForm.controls['email'])}}</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n                <mat-error *ngIf=\\\"registerForm.controls['password'].invalid\\\"> {{getErrorMessage(registerForm.controls['password'])}}</mat-error>\\n              </mat-form-field>\\n\\n              <button mat-button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\">Validate</button>\\n              <a align = \\\"center\\\" routerLink='/login'>I have an account</a>\\n            </div>\\n  </mat-card-content>\\n</form>\\n  <div align=\\\"center\\\">\\n\\n</div>\\n</mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, MinLengthValidator } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor( private apiService: ApiService, private router: Router) { }\n  registerForm = new FormGroup ({\n    name: new FormControl('', Validators.required),\n    lastname: new FormControl ('', Validators.required),\n    email: new FormControl ('', [Validators.email, Validators.required]),\n    password : new FormControl ('', [Validators.required, Validators.minLength(5)])\n  });\n\n  getFormValue(f) {\n    if (f.valid) {\n    // console.log(f.value);\n    // console.log(f.valid);\n    this.apiService.addUser(f.value).subscribe(res => {\n      // console.log(res.json().data);\n      if (res.json().status === 401) {\n        this.router.navigateByUrl('/login');\n        console.log(res.json().message);\n      } else {\n          let token = res.json().data;\n          this.apiService.saveToken(token);\n          // this.router.navigateByUrl('/login');\n          this.router.navigateByUrl(''); }\n          console.log(res.status);\n    });\n  }\n  }\n\n  getErrorMessage (f) {\n\n    return  f.hasError('required') ? 'You must enter a value' :\n            f.hasError('email') ? 'Not a valid email' :\n            f.hasError('minlength') ? 'Password must contain at least 5 characters' :\n            '' ;\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/todo/todo.component.css\n// module id = ./src/app/todo/todo.component.css\n// module chunks = main","module.exports = \"<!-- <div >\\n  <p> Title : {{ todo?.title }}</p>\\n  <p> Description : {{ todo?.description }}</p>\\n  <p> Date : {{ todo?.date }}</p>\\n  <p> Done : {{ todo?.done }}</p>\\n  </div>\\n-->\\n  <ol>\\n    <li>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"todo.title\\\" placeholder=\\\"Title\\\">\\n      </mat-form-field>\\n    </li>\\n    <li>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"todo.description\\\" placeholder=\\\"Description\\\">\\n      </mat-form-field>\\n    </li>\\n    <li>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"todo.date\\\" placeholder=\\\"Date\\\">\\n      </mat-form-field>\\n    </li>\\n    <li>\\n\\n      <mat-radio-group [(ngModel)]=\\\"todo.done\\\">\\n            <mat-radio-button  value=\\\"true\\\">true</mat-radio-button>\\n            <mat-radio-button  value=\\\"false\\\">false</mat-radio-button>\\n          </mat-radio-group>\\n\\n      <!--\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"todo.done\\\" placeholder=\\\"Done\\\">\\n      </mat-form-field>\\n      -->\\n    </li>\\n    <li>\\n      <button mat-raised-button (click)=\\\"editTodo()\\\">Edit</button>\\n    </li>\\n  </ol>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/todo/todo.component.html\n// module id = ./src/app/todo/todo.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n  todo = { title: '', description: '', date: '', done: '' };\n\n  index = String;\n  constructor(private apiService: ApiService, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => { this.index = params.index; });\n  }\n\n  editTodo() {\n    console.log(this.todo);\n    this.apiService.updateTodo(this.todo, this.index).subscribe(res => console.log(res));\n  }\n\n\n  getTodo() {\n    this.apiService.getTodoByIndex(this.index).subscribe(res => {\n      this.todo = res.json();\n      console.log(res);\n    }\n    );\n  }\n\n  ngOnInit() {\n    this.getTodo();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo/todo.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}